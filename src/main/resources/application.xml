<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
       default-lazy-init="true">

    <context:property-placeholder location="classpath:application.properties"/>

    <context:component-scan base-package="com.github.andriiyan.spring_data_access.api.dao"/>

    <bean id="myEmf" name="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.github.andriiyan.spring_data_access"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show-sql}</prop>
                <prop key="spring.jpa.generate-ddl">${spring.jpa.generate-ddl}</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="url" value="${spring.datasource.url}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="myEmf"/>
    </bean>

    <jpa:repositories base-package="com.github.andriiyan.spring_data_access.api.dao" entity-manager-factory-ref="myEmf"/>

    <tx:annotation-driven/>

    <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="eventService" class="com.github.andriiyan.spring_data_access.impl.service.EventServiceImpl">
        <property name="eventDao" ref="eventDao"/>
    </bean>
    <bean id="ticketService" class="com.github.andriiyan.spring_data_access.impl.service.TicketServiceImpl">
        <property name="ticketDao" ref="ticketDao" />
    </bean>
    <bean id="userService" class="com.github.andriiyan.spring_data_access.impl.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
    </bean>
    <bean id="userAccountService" class="com.github.andriiyan.spring_data_access.impl.service.UserAccountServiceImpl">
        <property name="userAccountDao" ref="userAccountDao"/>
    </bean>
    <bean id="bookingFacade" class="com.github.andriiyan.spring_data_access.impl.facade.BookingFacadeImpl">
        <constructor-arg ref="eventService"/>
        <constructor-arg ref="ticketService"/>
        <constructor-arg ref="userService"/>
        <constructor-arg ref="userAccountService"/>
    </bean>
</beans>